type ThirdParty @entity {
  id: ID!
  managers: [String!]
  rawMetadata: String!
  resolver: String!
  isApproved: Boolean
  maxItems: BigInt!
  totalItems: BigInt!
  items: [Item!] @derivedFrom(field: "thirdParty")
  metadata: Metadata

  # Searcheable fields
  searchName: String
  searchDescription: String
  searchText: String
}

type Item @entity {
  id: ID!
  collection: String!
  rawMetadata: String!
  isApproved: Boolean
  thirdParty: ThirdParty!
  metadata: Metadata
}

type Tier @entity {
  id: ID!
  value: BigInt!
  price: BigInt!
}

type Metadata @entity {
  id: ID!
  type: MetadataType
  thirdParty: ThirdPartyMetadata
}

enum MetadataType @entity {
  undefined
  third_party_v1
}

type ThirdPartyMetadata @entity {
  id: ID!
  name: String!
  description: String!
}

# thegraph doesn't support count operations, but we need them to paginate results
# This entity is a workaround to this issue, but it's still not enough, as we'd need counts for more complex queries
type Count @entity {
  id: ID!
  thirdPartyTotal: BigInt!
  itemTotal: BigInt!
  tierTotal: BigInt!
}
